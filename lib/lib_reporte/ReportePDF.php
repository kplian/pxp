<?php
//incluimos la libreria
/*	CONTROL CAMBIOS 
 * #ISSUE				FECHA				AUTOR				DESCRIPCION
 	#22	EndeEtr		 06-06-2019 			MZM KPLIAN		Adicion de funcion grillaDatos para manejo de reporte multilinea
 *  #24 ETR         25/06/2019              RAC KPLIAN      Se considera agrupadores al exportar a PDF
 * #69	ETR			25.09.2019				MZM				Ajuste de espacio al cambio de hoja 	
 //#ETR-2046		MZM-KPLIAN	04.12.2020				Adicion de campo separador de lineas para planilla de aguinaldos
*/
if (version_compare(phpversion(), '5.4.0', '<')) {
     if(session_id() == '') {
        session_start();
     }
 }
 else
 {
    if (session_status() == PHP_SESSION_NONE) {
        session_start();
    }
 }
include(dirname(__FILE__).'/../DatosGenerales.php');
require_once(dirname(__FILE__).'/../tcpdf/config/lang/spa.php');
require_once(dirname(__FILE__).'/../tcpdf/tcpdf.php');
require_once(dirname(__FILE__).'/mypdf.php');

class ReportePDF extends MYPDF
{
	var $tablewidths=array();
	var $tablealigns=array();
	var $tablecolumns=array();
	var $lines='TBRL';
	var $footerset;
	var $headerset;
	var $titulo;
	var $fecha_pie;
	var $url_archivo;
	var $nombre_archivo;
	var $pdf;
	var $headery;

	protected $objParam;
	protected $res;
	protected $res_aux;
	
	protected $aMaestro=array();//Array con datos del Maestro
	protected $aMaestroEtiquetas=array();//Etiquetas del Maestro
	protected $aMaestroColVisibles=array();//Define que columnas serán visibles del Maestro, por defecto todas
	protected $aMaestroColAncho=array();//Define el ancho de las columnas del Maestro
	protected $maestroBloqueCant=2;//Define la cantidad de columnas para el Maestro
	protected $aMaestroColAlign=array();
	protected $maestroTipoEtiquetas='horizontal'; //Define como se imprimirán las etiquetas del maestro: 'horizontal', 'vertical'
	protected $anchoMaestroEtiquetas=15;
	protected $aMaestroBloqueAncho=array();
	
	protected $aDetalle=array();//Matriz con datos del Detalle
	protected $aDetalleEtiquetas=array();//Etiquetas del Detalle
	protected $aDetalleEtiquetasFormato=array();//Etiquetas del Detalle con el formato clave valor igual que los datos del detalle
	protected $aDetalleColVisibles=array();//Define que columnas serán visibles del Detalle, por defecto todas
	protected $aDetalleColAlign=array();
	protected $aDetalleColAncho=array();//Define el ancho de las columnas del Detalle
	protected $aDetalleKeys=array();
	protected $aDetalleTotCols=array();//Array que indica las columnas que deberán totalizarse
	protected $aDetalleTotales=array();//Array que contiene los totales de las columnas marcadas para totalizar
	
	protected $alinearCabecera='L';
	protected $orientacion='P';
	protected $usuario='NO DEFINIDO';
	protected $sistema='ENDESIS';
	protected $titulo1;
	protected $titulo2;
	protected $titulo3;
	
	protected $swMaestroHeader=0;//Bandera para controlar una sola impresión del maestro
	protected $swDetalleEtiquetas=0;//Bandera que determina si ya se imprimió al menos una vez las etiquetas
	
	protected $tipoReporte;//pdf_grid, pdf
	
	protected $arrNumeracion=array();
	protected $swNumeracion='si';
	
	protected $swMaestro=0;
	protected $maestroX;
	protected $maestroY;
	
	protected $columnaAgrupadora;//#24 considera agrupadores
	protected $agrupador;//#24 considera agrupadores
	
	/**
	 * Nombre funcion:	ReportePDF
	 * Proposito:		Constructor de la Función genérica de ReportePDF (Define el nombre del archivo, titulo, cabecera derecha y logo y pie)
	 * Fecha creacion:	12/04/2009
	 * @param orientation Es la orientación el papel
	 * @param formato es el formato del papel que puede ser A4 letter u otro
	 * @param nom_archivo es el nombre del archivo ene l cual se genera el reporte
	 * @param tit es el titulo del reporte
	 * @param der define el texto que tendra la cabecera derecha del reporte
	 * 	  
	 */
	function __construct(CTParametro $objParam){
		$this->objParam=$objParam;
		$this->url_archivo = dirname(__FILE__)."/../../../reportes_generados/".$this->objParam->getParametro('nombre_archivo');
		$this->nombre_archivo=$this->objParam->getParametro('nombre_archivo');
		$this->titulo=$this->objParam->getParametro('titulo_archivo');
		$this->orientacion=$this->objParam->getParametro('orientacion');
		$this->fecha_pie=1;
		$this->setBarcode(date('d-m-Y H:i:s').",usuario:".$_SESSION['_LOGIN']);
		$this->tipoReporte=$this->objParam->getParametro('tipoReporte');
		
		$this -> columnaAgrupadora = $this->objParam->getParametro('groupBy'); //#24 
		$this -> agrupador = '';//#24 

		//Ejecución del constructor del padre
		parent::__construct($this->orientacion, 'mm', $this->objParam->getParametro('tamano'), true, 'UTF-8', false);

		//Información del documento
		$this->SetCreator('pXP');
		$this->SetAuthor('kplian');
		$this->SetTitle($this->titulo);
		$this->SetSubject("File generated by pXP framework");
		$this->SetKeywords("TCPDF, PDF, pXP, $tit");
		//$this->SetProtection($permissions=array('print','copy','print-high','modify'), $user_pass='', $owner_pass=null, $mode=0, $pubkeys=null);
		$this->SetHeaderData($_SESSION['_DIR_LOGO'], PDF_HEADER_LOGO_WIDTH, $this->titulo,'');
		$this->SetHeaderData($_SESSION['_DIR_LOGO'], PDF_HEADER_LOGO_WIDTH, $this->titulo,'');
		
		//set header and footer fonts
		$this->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$this->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

		//set default monospaced font
		$this->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
		
		//set margins
		$this->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
		$this->SetHeaderMargin(PDF_MARGIN_HEADER);
		$this->SetFooterMargin(PDF_MARGIN_FOOTER);
		
		//set auto page breaks
		$this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

		//set image scale factor
		$this->setImageScale(PDF_IMAGE_SCALE_RATIO);
		
		//Inicializa el array para numeración de columnas
		$this->arrNumeracion=array('label' => 'Nro.', 'name' => 'nro','width'=> '65','type'=> 'Field');
	}
	
		
	/*function Footer() {
	    $this->setY(-15);
		$ormargins = $this->getOriginalMargins();
		$this->SetTextColor(0, 0, 0);
		//set style for cell border
		$line_width = 0.85 / $this->getScaleFactor();
		$this->SetLineStyle(array('width' => $line_width, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)));
		$ancho = round(($this->getPageWidth() - $ormargins['left'] - $ormargins['right']) / 3);
		$this->Ln(2);
		$cur_y = $this->GetY();
		$this->Cell($ancho, 0, 'Generado por XPHS', 'T', 0, 'L');
		$pagenumtxt = 'Página'.' '.$this->getAliasNumPage().' de '.$this->getAliasNbPages();
		
		if($this->fecha_pie){
			$this->Cell($ancho, 0, $pagenumtxt, 'T', 0, 'C');
			$this->Cell($ancho, 0, "Fecha : ".date("d-m-Y"), 'T', 0, 'R');
			$this->Ln();
			$this->Cell($ancho, 0, 'Usuario: '.$_SESSION['_LOGIN'], '', 0, 'L');
			$this->Cell(0, 0, "Hora : ".date("H:i:s")."    ", '', 0, 'R');
		}
		else{ 
			$this->Cell($ancho, 0, $pagenumtxt, 'T', 0, 'C');
			$this->Cell($ancho, 0, '', 'T', 0, 'R');
			$barcode = $this->getBarcode();
			if (!empty($barcode)) {
				$this->Ln($line_width);
				
				$style = array(
					'position' => $this->rtl?'R':'L',
					'align' => $this->rtl?'R':'L',
					'stretch' => false,
					'fitwidth' => true,
					'cellfitalign' => '',
					'border' => false,
					'padding' => 0,
					'fgcolor' => array(0,0,0),
					'bgcolor' => false,
					'text' => false,
					'position' => 'R'
				);
				$this->write1DBarcode($barcode, 'C128B', $ancho*2, $cur_y + $line_width, '', (($this->getFooterMargin() / 3) - $line_width), 0.3, $style, '');
			}
		}
	}
*/	
	function Footer() {
	    $this->setY(-15);
		$ormargins = $this->getOriginalMargins();
		$this->SetTextColor(0, 0, 0);
		//set style for cell border
		$line_width = 0.85 / $this->getScaleFactor();
		$this->SetLineStyle(array('width' => $line_width, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)));
		$ancho = round(($this->getPageWidth() - $ormargins['left'] - $ormargins['right']) / 3);
		$this->Ln(2);
		$cur_y = $this->GetY();
		//$this->Cell($ancho, 0, 'Generado por XPHS', 'T', 0, 'L');
		$this->Cell($ancho, 0, 'Usuario: '.$_SESSION['_LOGIN'], '', 0, 'L');
		$pagenumtxt = 'Página'.' '.$this->getAliasNumPage().' de '.$this->getAliasNbPages();
		$this->Cell($ancho, 0, $pagenumtxt, '', 0, 'C');
		$this->Cell($ancho, 0, $_SESSION['_REP_NOMBRE_SISTEMA'], '', 0, 'R');
		$this->Ln();
		$fecha_rep = date("d-m-Y H:i:s");
		$this->Cell($ancho, 0, "Fecha Impresion : ".$fecha_rep, '', 0, 'L');
		$this->Ln($line_width);
		$this->Ln();
		$barcode = $this->getBarcode();
		$style = array(
					'position' => $this->rtl?'R':'L',
					'align' => $this->rtl?'R':'L',
					'stretch' => false,
					'fitwidth' => true,
					'cellfitalign' => '',
					'border' => false,
					'padding' => 0,
					'fgcolor' => array(0,0,0),
					'bgcolor' => false,
					'text' => false,
					'position' => 'R'
				);
				$this->write1DBarcode($barcode, 'C128B', $ancho*2, $cur_y + $line_width+5, '', (($this->getFooterMargin() / 3) - $line_width), 0.3, $style, '');
				
	/*			
		
		if($this->fecha_pie){
			$this->Cell($ancho, 0, $pagenumtxt, 'T', 0, 'C');
			$this->Cell($ancho, 0, "Fecha : ".date("d-m-Y"), 'T', 0, 'R');
			$this->Ln();
			$this->Cell($ancho, 0, 'Usuario: '.$_SESSION['_LOGIN'], '', 0, 'L');
			$this->Cell(0, 0, "Hora : ".date("H:i:s")."    ", '', 0, 'R');
		}
		else{ 
			$this->Cell($ancho, 0, $pagenumtxt, 'T', 0, 'C');
			$this->Cell($ancho, 0, '', 'T', 0, 'R');
			$barcode = $this->getBarcode();
			if (!empty($barcode)) {
				$this->Ln($line_width);
				
				$style = array(
					'position' => $this->rtl?'R':'L',
					'align' => $this->rtl?'R':'L',
					'stretch' => false,
					'fitwidth' => true,
					'cellfitalign' => '',
					'border' => false,
					'padding' => 0,
					'fgcolor' => array(0,0,0),
					'bgcolor' => false,
					'text' => false,
					'position' => 'R'
				);
				$this->write1DBarcode($barcode, 'C128B', $ancho*2, $cur_y + $line_width, '', (($this->getFooterMargin() / 3) - $line_width), 0.3, $style, '');
			}
		}
		*/
	}

	function definirMaestro(){
		$cantCol=2;
		$anchoCol=93;
		if($this->orientacion=='L'){
			$cantCol=2;
			$anchoCol=110;
		}

		//var_dump($this->objParam->getParametro('maestro'));exit;
		if($this->objParam->getParametro('maestro')!=null&&$this->objParam->getParametro('desplegarMaestro')=='si'){
			$this->swMaestro=1;

			//if(is_array($this->objParam->getParametro('maestro'))){
				$arr=array();
				$arrMas=array();
				$arrMasEt=array();
				$arr=$this->_json_decode($this->objParam->getParametro('maestro'),true);
				$i=0;
				foreach ($arr as $key)  {
					if($i%$cantCol==0){
						$this->Ln();
					}
					//echo $key['label'].' ->'.$key['value'].'\n';
					//$this->Cell(50, 5, $key['label'].': '.$key['value'], 0, 0, 'L', 0, '', 0, false, 'C', 'C');
					//MultiCell($w, $h, $txt, $border=0, $align='J', $fill=0, $ln=1, $x='', $y='', $reseth=true, $stretch=0)
					$this->MultiCell($anchoCol, 5, $key['label'].': '.$key['value'], 0, '', 0, 0, '', '', true, 0, false);
					$i++;
					//array_push($arrMasEt,$key['label']);
					//array_push($arrMas,$key['value']);
				}
				//echo $i;exit;
				if($this->objParam->getParametro('filaInicioEtiquetas')==0){
					 $this->maestroY=15;//($i-1)*4;
				} else{
					$this->maestroY=$this->objParam->getParametro('filaInicioEtiquetas');	
				}
				
				//echo 'fukc';exit;
				//var_dump($arrMas);exit;
				
				/*foreach ($variable as $key => $value) {
					
				}*/
				
				/*$this->setMaestroEtiquetas($arrMasEt);
				$this->setAnchoMaestroEtiquetas(15);
				$this->setMaestroLC(array($arrMas));
				$this->setmaestroBloqueCant(2);
				$this->setMaestroBloqueAncho(array(50,50));
				$this->renderMaestro();*/
				//$this->setXY(50,50);
				
				

/*				for($i=0;$i<count($arr);$i++){
					array_push($this->aMaestroEtiquetas,$arr[$i]['label']);
				}*/
				//var_dump($this->aMaestro);
				/*$aux=$this->objParam->_json_decode($this->objParam->getParametro('maestro'));
				$this->Ln();
				for ($i=0;$i<count($aux);$i++){
					$this->Cell(0, 10, $aux[$i]['label'].': ', 0, 2, 'C', 0, '', 0, false, 'C', 'C');
					$this->Cell(150, 10, $aux[$i]['value'], 0, 2, 'C', 0, '', 1, false, 'C', 'C');
					//var_dump ($aux[$i]);exit;
				}*/
				/*$this->maestroTipoEtiquetas='vertical';
				$this->aMaestroEtiquetas=$this->objParam->getParametro('maestro');
				$this->renderMaestro();*/

				//$this->SetXY(10, 300);
				
			}
	}
	
	
	function Header(){
		if($this->orientacion=='P'){
			if($this->alinearCabecera=='L'){
				$align=0;
			} else{
				$align=170;
			}
			
			$this->definirCabecera($this->objParam->getParametro('codSistema'),$this->orientacion);
			$this->Ln();
			$this->definirMaestro();
			
			

		} else if($this->orientacion=='L'){
			if($this->alinearCabecera=='L'){
				$align=0;
			} else{
				$align=230;
			}
			$this->definirCabecera($this->objParam->getParametro('codSistema'),$this->orientacion);
			
			$this->Ln();
			$this->definirMaestro();
			
		} else{
			throw new Exception("Reporte: Orientación incorrecta, debe ser 'P' o 'L'");
		}
		
		//Verfica si el maestro se dibujará en la cabecera
		if($this->swMaestroHeader){
			
			$this->renderMaestro();
		}
		
		//Imprime las etiquetas de los datos del detalle, considerando si el maestro va en la cabecera o no
		if((!$this->swMaestroHeader&&$this->swDetalleEtiquetas)||($this->swMaestroHeader)){
			$this->renderEtiquetas();
			$this->swDetalleEtiquetas=1;
		}
		

	}
	
	function renderEtiquetas(){
		//Dibuja las etiquetas de los datos del detalle
		$this->renderTabla($this->aDetalleEtiquetasFormato,$this->aDetalleColVisibles,1,1,$this->aDetalleColAncho,$this->aDetalleColAlign,$this->aDetalleKeys,1);
	}
	
	/*function Header()
	{
		$ormargins = $this->getOriginalMargins();
		$headerfont = $this->getHeaderFont();
		$headerdata = $this->getHeaderData();
		$inity=$this->GetY();
		
		if (($headerdata['logo']) AND ($headerdata['logo'] != K_BLANK_IMAGE)) {
			$ancho_celda=($this->w-$this->lMargin-$this->rMargin-$headerdata['logo_width'])/2;
			$imgtype = $this->getImageFileType(K_PATH_IMAGES.$headerdata['logo']);
			if (($imgtype == 'eps') OR ($imgtype == 'ai')) {
				$this->ImageEps(K_PATH_IMAGES.$headerdata['logo'], '', '', $headerdata['logo_width']);
			} elseif ($imgtype == 'svg') {
				$this->ImageSVG(K_PATH_IMAGES.$headerdata['logo'], '', '', $headerdata['logo_width']);
			} else {
				$this->Image(K_PATH_IMAGES.$headerdata['logo'], '', '', $headerdata['logo_width']);
			}
			$imgy = $this->getImageRBY();
		} else {
			$ancho_celda=($this->w-$this->lMargin-$this->rMargin)/2;
			$imgy = $this->GetY();
		}
		$cell_height = round(($this->getCellHeightRatio() * $headerfont[2]) / $this->getScaleFactor(), 2);
		// set starting margin for text data cell
		if ($this->getRTL()) {
			$header_x = $ormargins['right'] + ($headerdata['logo_width'] * 1.1);
		} else {
			$header_x = $ormargins['left'] + ($headerdata['logo_width'] * 1.1);
		}
		$this->SetTextColor(0, 0, 0);
		// header title
		$this->SetFont($headerfont[0], 'B', $headerfont[2] + 1);
		$this->SetX($header_x);
		$this->MultiCell($ancho_celda, 0, $headerdata['title'], 0, '', 0, 2, '', '', true, 0, false);
		$tituloy=$this->getY();
		$this->SetFont($headerfont[0], $headerfont[1], $headerfont[2]);
		$this->SetXY($header_x+$ancho_celda,$inity);
		$this->MultiCell($ancho_celda, 0, $headerdata['string'], 0, '', 0, 2, '', '', true, 0, false);
		// print an ending header line
		$this->SetLineStyle(array('width' => 0.85 / $this->getScaleFactor(), 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)));
		$this->SetY((2.835 / $this->getScaleFactor()) + max($imgy, max ($this->GetY(),$tituloy)));
		$this->SetFont('helvetica', 'B', 8);
		$this->addTabla(array($this->tablecolumns));
		$this->tMargin=$this->GetY();*/

		/*if ($this->getRTL()) {
			$this->SetX($ormargins['right']);
		} else {
			$this->SetX($ormargins['left']);
		}
		$this->Cell(0, 0, '', 'T', 0, 'C');*/
				
	//}
	
	function defineDatosMostrar($col){
		$this->columnas=$col;
		$columna=0;
		$ancho_total=0;
		
		if($this->swNumeracion=='si'){
			array_unshift($this->columnas,$this->arrNumeracion);
		}
		
		foreach ($this->columnas as $data){
			$ancho_total=$ancho_total+$data['width'];
			
		}

		foreach ($this->columnas as $data){
			$this->tablewidths[$data['name']]=round(($data['width']/$ancho_total)*100,2);
			$this->tablecolumns[$data['name']]=$data['label'];
			$this->tablealigns[$data['name']]=$data['type']=='NumberField'?'right':'left';
		}

		$this->AddPage();
		
	}

	function addTabla($datas, $border=1, $fill=1,$titulos=0,$relleno=0) {
		/*ob_start();
		$fb=FirePHP::getInstance(true);
		$fb->log('sssss',"count(pArrayDatos)");*/
		
		
		
		
		$html = '<table border="'.$border.'" cellspacing="0" cellpadding="1"  style="font-size:6px">';
		$cont=1;

		foreach($datas AS $data) {
			
			//#24 evaluea si tenemso agrupador, y si es necesario aplicarlo
			if($this -> columnaAgrupadora !== '' && $titulos == 0){
				if($this->agrupador !=  $data[$this->columnaAgrupadora]){
					
					
					//añade agrupador
					$html.='<tr><td BGCOLOR="888080" colspan="'.count($this->tablecolumns).'" > <font color="#FFFFFF"> <b>'.$this->tablecolumns[$this->columnaAgrupadora].':  '.$data[$this->columnaAgrupadora].'</b></font></td></tr>';
				   
				    $this->agrupador = $data[ $this->columnaAgrupadora ];
				}
			}
			
			$html.='
				<tr>';
			foreach ($this->tablecolumns as $col=>$single){
				if($titulos){
					$align='center';
				} else{
					$align=$this->tablealigns[$col];	
				}
				
				if($relleno){ //"#000080"
					$html.='
								<td BGCOLOR="#808080" width="'.$this->tablewidths[$col].'%" align="'.$align.'"><font color="#FFFFFF">'.$data[$col].'</font></td>';
					//$relleno=0;
				} else {
				
					//if($cont%2==1 || $fill==0){
						$html.='
								<td width="'.$this->tablewidths[$col].'%" align="'.$align.'">'.$data[$col].'</td>';
					/*}
					else{
						$html.='
								<td BGCOLOR="'.$_SESSION['color_fill_reportes'].'" width="'.$this->tablewidths[$col].'%" align="'.$align.'">'.$data[$col].'</td>';
					}*/
				}
			}
			$cont++;
			$html.='
					</tr>';
		}
		$html.='</table>';
		//echo $html;exit;
		if($this->swMaestro){
			$this->setY($this->maestroY);
			$this->maestroY=$this->maestroY+$this->objParam->getParametro('filaInicioDatos');
		}
		//var_dump($html);exit;
		$this->writeHTML($html,false,false,false,false,'');
	}
	
	private function renderTabla($pArrayDatos,$pArrayColVisibles,$pBorder=1, $pFill=1, $pArrayColAncho='', $pArrayColAlign='',$pArrayKeys='',$pConTit=0,$pTotCols='no') {
		/*ob_start();
		$fb=FirePHP::getInstance(true);
		$fb->log('kkkk',"rendertabla");*/
		
		//$this->AddPage();
		//Inicializa en cero el array de totales
		//var_dump($pArrayDatos);exit;
		$sw_totales=0;
		if($pTotCols=='si'){
			$sw_totales=1;
			for($j=0;$j<count($this->aDetalleTotCols);$j++){
				$this->aDetalleTotales[$j]=0;
			}
		}

		$html = '<table border="'.$pBorder.'" cellspacing="0" cellpadding="1">';
		$cont=1;
		$sw=1;
		
		/*ob_start();
		$fb=FirePHP::getInstance(true);
		$fb->log(count($pArrayDatos),"count(pArrayDatos)");
		$fb->log(count($pArrayColVisibles),"count(pArrayColVisibles)");*/
		
		for($i=0;$i<count($pArrayDatos);$i++){
			$html.='
				<tr>';
			for($j=0;$j<count($pArrayColVisibles);$j++){
				//Define los valores para las propiedades de la tabla
				if($pArrayColAncho!=''){
					$ancho=$pArrayColAncho[$j];
				} else{
					$ancho=20;	
				}
				
				if($pArrayColVisibles!=''){
					$visible= $pArrayColVisibles[$j];
				} else{
					$visible=1;
				}
				
				if($pArrayColAlign!=''){
					$align= $pArrayColAlign[$j];
				} else{
					$align='left';
				}

				//Solo renderiza las columnas visibles
				if($visible==1){
					$align=$pConTit && $sw ? 'center':$align;
					if($pArrayKeys==''){
						$dato = $pConTit&&$sw ? '<b>'.$pArrayDatos[$i][$j].'</b>':$pArrayDatos[$i][$j];
						//Totaliza la columna si corresponde
						if($pTotCols=='si'&&$this->aDetalleTotCols[$j]){
							$this->aDetalleTotales[$j]+=$pArrayDatos[$i][$j];
						}
					} else{
						$dato = $pConTit&&$sw ? '<b>'.$pArrayDatos[$i][$pArrayKeys[$j]].'</b>':$pArrayDatos[$i][$pArrayKeys[$j]];
						//Totaliza la columna si corresponde
						if($pTotCols=='si'&&$this->aDetalleTotCols[$j]){
							$this->aDetalleTotales[$j]+=$pArrayDatos[$i][$pArrayKeys[$j]];
						}
					}
					if($cont%2==1 || $pFill==0){
						$fill='';
					} else{
						$fill='BGCOLOR="'.$_SESSION['color_fill_reportes'].'"';	
					}

					//Todas las filas múltiplos de dos, las colorea
					$html.='
							<td '.$fill.' width="'.$ancho.'%" align="'.$align.'">'.$dato.'</td>';
				}
			}
			$cont++;
			$html.='
					</tr>';
			$sw=0;
			//echo $html;exit;
		}
		
		/*$html.='</table>;';
		
		$html .= '
		<table border=0 cellspacing="0" cellpadding="1">';*/
		
		//Verifica si se totalizó alguna de las columnas para imprimir al final del documento
		if($sw_totales){
			$dato='';
			$align='rigth';
			$html.='
				<tr>';
			for($j=0;$j<count($pArrayColVisibles);$j++){
				if($pArrayColAncho!=''){
					$ancho=$pArrayColAncho[$j];
				} else{
					$ancho=20;	
				}
				if($pArrayColVisibles!=''){
					$visible= $pArrayColVisibles[$j];
				} else{
					$visible=1;
				}
				//Solo renderiza las columnas visibles
				if($visible==1){
					if($pTotCols=='si'&&$this->aDetalleTotCols[$j]){
						$dato=$this->aDetalleTotales[$j];
					} else{
						$dato=' ';
					}

					$html.='
							<td width="'.$ancho.'%" align="'.$align.'">'.$dato.'</td>';
				}
			}
			/*$html.='
						<td width="20%" align="left">'.$this->aDetalleTotales[6].'</td>';*/
			$html.='
					</tr>';
			
			
		}

		$html.='</table>';
		$this->writeHTML($html,false,false,false,false,'');
		
	}
	
	private function renderMaestro(){
		if($this->maestroTipoEtiquetas=='vertical'){
			$aux[0]=$this->aMaestroEtiquetas;
			$aux[1]=$this->aMaestro[0];
			//Coloca negrillas a todas las etiquetas
			for($i=0;$i<count($this->aMaestroEtiquetas);$i++){
				$aux[0][$i]='<b>'.$aux[0][$i].'</b>';
			}
			//TODO 22/02/2012: cambiar el ancho fijo por variable en función de la cantidad de etiquetas
			$this->renderTabla($aux,array(1,1,1),0,0,$this->aMaestroColAncho,'');
		} else{ //Por defecto es 'horizontal'
			//1. Une los arrays (de las etiquetas y de los valores de las etiquetas) en una matriz de dos columnas y n filas
			for($i=0;$i<count($this->aMaestroEtiquetas);$i++){
				$aux[$i][0]='<b>'.$this->aMaestroEtiquetas[$i].':</b>';
				$aux[$i][1]=$this->aMaestro[0][$i];
			}

			if($this->tipoReporte=='pdf'||$this->tipoReporte=='pdf_grid'){
				//2. Formatea el maestro en función de las columnas definidas
				if($this->maestroBloqueCant>1){
					//Cuenta cuantas filas hay en el array auxiliar
					$tot=count($aux)-1;
					$fila=0;
					$col=0;
					for($i=0;$i<count($aux);$i++){
						if($col>=$this->maestroBloqueCant*2){
							$col=0;
							$fila++;
						}
						$aux2[$fila][$col]=$aux[$i][0];
						$col++;
						$aux2[$fila][$col]=$aux[$i][1];
						$col++;
					}
				} else{
					$aux2=$aux;
				}
			
			
				//3. Verifica el total de columnas
				$numCols=0;
				if(count($aux2)>0){
					foreach ($aux2[0] as $col){
						$numCols++;
					}
				}
				
				$aCols=array();
				if($numCols>0){
					for($i=0;$i<=$numCols-1;$i++){
						$aCols[]=1;
					}
				}
			
				//4. Define los anchos de las columnas
				$aWidths=array();
				$col=0;
				if($numCols>0){
					for($i=0;$i<=$numCols;$i++){
						if($i%2==1){
							$aWidths[]=$this->aMaestroBloqueAncho[$col] - $this->anchoMaestroEtiquetas;
							$col++;
						} else{
							$aWidths[]=$this->anchoMaestroEtiquetas;
						}
					}
				}
			}
			//Dibuja los datos del maestro
			//$this->renderTabla($aux2,$aCols,0,0,array(10,10,10,10,10,10),'');
			$this->renderTabla($aux2,$aCols,0,0,$aWidths,'','');
		}
	}

	function generarReporte(){ 
		if($this->tipoReporte=='pdf'){
			//Da formato al array de las etiquetas a clave valor
			for($i=0;$i<count($this->aDetalleKeys);$i++) {
				$this->aDetalleEtiquetasFormato[0][$this->aDetalleKeys[$i]]=$this->aDetalleEtiquetas[$i];
			}
			$this->AddPage();
	
			if(!$this->swMaestroHeader){
				$this->renderMaestro();
				$this->renderEtiquetas();
				$this->swDetalleEtiquetas=1;
			}
			$this->renderDetalle();
		}
		
		parent::output($this->url_archivo,'F');
		
	}
	
	//RCM 22-11-2011 (funciones nuevas desde aqui)
	/*
	 * MÉTODOS PROPIOS DE LA BASE DE DATOS
	 */
	
	
	//Obtiene datos del maestro desde la base de datos
	public function cargarMaestroBD($pCustom, $pMetodo){
		$this->aMaestro=$this->ejecutarAccion($pCustom, $pMetodo);
	}
	
	//Recibe los datos del maestro directamente desde un array local
	public function setMaestroLC($pArrayMaestro){
		$this->aMaestro=$pArrayMaestro;
	}

	//Obtiene datos del Detalle desde la base de datos
	public function setDetalleBD($pCustom, $pMetodo){
		$this->aDetalle=$this->ejecutarAccion($pCustom, $pMetodo);

		//aumentar evaluacion de la respuesta
		if(count($this->aDetalle)>0){
			//Carga las llaves (keys) del array
			$this->aDetalleKeys=array_keys($this->aDetalle[0]);  
		} else{
			$this->aDetalleKeys=$this->aDetalleEtiquetas;
		}
	}
	
	//Recibe los datos del Detalle desde un array local
	public function cargarDetalleLC($pArrayDetalle){
		$this->aDetalle=$pArrayDetalle;
	}
	
	//Dibuja los datos del detalle con sus etiquetas
	public function renderDetalle(){
		//Dibuja si el array no está vacío
		if(count($this->aDetalle)>0){
			//Da formato como clave valor al array de las etiquetas
			/*for($i=0;$i<count($this->aDetalleKeys);$i++) {
				$aTmp[$this->aDetalleKeys[$i]]=$this->aDetalleEtiquetas[$i];
			}*/
			
			//Agrega las etiquetas al comienzo del array de datos
			//array_splice($this->aDetalle,0,0,array($aTmp));
			
			//Dibuja la tabla del detalle
			$this->renderTabla($this->aDetalle,$this->aDetalleColVisibles,1,1,$this->aDetalleColAncho,$this->aDetalleColAlign,$this->aDetalleKeys,0,'si');
		}
	}
	
	private function ejecutarAccion($pCustom, $pMetodo){
		$maestro=array();
		$puntero=0;
		$this->objParam->addParametroConsulta('puntero','0');
		$this->objParam->addParametroConsulta('cantidad',$_SESSION['cantidad_reportes']);
		//Ejecuta las funciones del modelo para la recuperación de los datos
		eval('$cad = new $pCustom();');
		eval('$this->res=$cad->'.$pMetodo.'($this->objParam);');

		//Evalúa si se produjo algún error
		if($this->res->getTipo()=='ERROR'){
			return $this->res;
		}

		//Establece la cantidad total de registros
		$cantidad_registros=$this->res->getTotal();
	
		//Define la cantidad del puntero en base al parámetro de sesión del número de filas para reportes
		$puntero=$puntero+$_SESSION['cantidad_reportes'];

		//Vacía el resultado en el array de los datos del maestro
		$maestro=$this->res->getDatos();
		
		//En caso de que la cantidad de registros supere al puntero, se vuelve a llamar a la base de datos los datos siguientes hasta completar todos
		while($cantidad_registros > $puntero){
			//Redefine el puntero
			$this->objParam->addParametroConsulta('puntero',$puntero);
			
			//Ejecuta las funciones del modelo para la recuperación de los datos
			eval('$cad = new $pCustom();');
			eval('$this->res_aux=$cad->'.$pMetodo.'($this->objParam);');
			
			//Evalúa si se produjo algún error
			if($this->res->getTipo()=='ERROR'){
				return $this->res_aux;
			}
			
			//Vacía los datos obtenidos en el array principal de datos
			foreach ($this->res_aux->getDatos() as $val){
				array_push($maestro, $val);
			}
			
			//Actualiza el puntero	
			$puntero=$puntero+$_SESSION['cantidad_reportes'];
		}
		
		return $maestro;
	}

	
	/*
	 * PROPIEDADES
	 */

	//Maestro
	public function setMaestroEtiquetas($pArrayEtiquetas){
		$this->aMaestroEtiquetas=$pArrayEtiquetas;
	}
	public function setMaestroColVisibles($pArrayColVisibles){
		$this->aMaestroColVisibles=$pArrayColVisibles;
	}
	public function setMaestroColAncho($pArrayColAncho){
		$this->aMaestroColAncho=$pArrayColAncho;
	}
	public function setmaestroBloqueCant($pColCant){
		$this->maestroBloqueCant=$pColCant;
	}
	public function setMaestroColAlign($pArrayColAlign){
		$this->aMaestroColAlign=$pArrayColAlign;
	}
	
	public function setMaestroTipoEtiquetas($pTipoEtiquetas){
		$this->MaestroTipoEtiquetas=$pTipoEtiquetas;
	}
	
	public function setAnchoMaestroEtiquetas($pAnchoEtiquetas){
		$this->anchoMaestroEtiquetas=$pAnchoEtiquetas;
	}
	
	public function setMaestroBloqueAncho($pArrayBloqueAncho){
		$this->aMaestroBloqueAncho=$pArrayBloqueAncho;
	}
	
	//Detalle
	public function setDetalleEtiquetas($pArrayEtiquetas){
		$this->aDetalleEtiquetas=$pArrayEtiquetas;
	}
	public function setDetalleColVisibles($pArrayColVisibles){
		$this->aDetalleColVisibles=$pArrayColVisibles;
	}
	public function setDetalleColAncho($pArrayColAncho){
		$this->aDetalleColAncho=$pArrayColAncho;
	}
	public function setDetalleColAlign($pArrayColAlign){
		$this->aDetalleColAlign=$pArrayColAlign;
	}
	public function setTitulo1($pTitulo){
		$this->titulo1=$pTitulo;
	}
	public function setTitulo2($pTitulo){
		$this->titulo2=$pTitulo;
	}
	public function setTitulo3($pTitulo){
		$this->titulo3=$pTitulo;
	}
	public function setMaestroHeader($pBoolean){
		$this->swMaestroHeader=$pBoolean;
	}
	public function setDetalleColsTotalizar($pArrayTotCols){
		$this->aDetalleTotCols=$pArrayTotCols;
	}
	
	public function imprimirColsGrid(){
		$this->SetFont('helvetica', 'B', 4);
		//var_dump(array($this->tablecolumns));
		$this->addTabla(array($this->tablecolumns),1,1,1,1);
		$this->SetFont('helvetica', 'N', 8);
	}
	

	/*
	 * FIN PROPIEDADES
	 */
	 
	 private function definirCabecera($pCodSistema,$pOrientacion){
	 	
		/*
		 * VERIFICA SI LA CABECERA SERA LA GENERICA O POR SISTEMA
		 */
		 //var_dump($this->objParam->getParametro('maestro'));exit;
		 if($pOrientacion=='L'){
		 	
			if($pCodSistema=='GEM'||$pCodSistema=='PXP'){
				$height = 20;
		        $x = $this->GetX();
		        $y = $this->GetY();
		        $this->SetXY($x, $y);
		        $this->Cell(40, $height, '', 1, 0, 'C', false, '', 0, false, 'T', 'C');
				/*$e=dirname(__FILE__).'/lib/'.$_SESSION['_DIR_LOGO'];
				echo $e; exit;*/
		        $this->Image(dirname(__FILE__).'/../'.$_SESSION['_DIR_LOGO'], 26, 8, 20);
		        
		        $x = $this->GetX();
		        $y = $this->GetY();
		        $this->SetFontSize(14);
		        $this->SetFont('','B');        
		        $this->Cell(170, $height/2, $this->titulo1, 1, 2, 'C', false, '', 1, false, 'T', 'C');        
		        $this->setXY($x,$y+$height/2);
				$this->SetFontSize(10);
		        $this->Cell(170, $height/2, $this->objParam->getParametro('titulo2'),1,0,'C',false,'',1,false,'T','C');
		                
		        $this->setXY($x+170,$y);
		        $this->SetFont('','');
		        $this->Cell(40+17, $height, '', 1, 0, 'C', false, '', 0, false, 'T', 'C');
		        
		        $this->SetFontSize(7);
		        
		        $width1 = 17;
		        $width2 = 23;
		        $this->SetXY($x+170, $y);
		        $this->setCellPaddings(2);
		        $this->SetFont('','B');
		        //$this->Cell($width1, $height/4, 'Código:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        //$this->Cell($width2, $height/4, $this->objParam->getParametro('codReporte'), "B", 0, 'C', false, '', 0, false, 'T', 'C');
		        
		        $this->SetFont('','');
		        $y += 5;
		        $this->SetXY($x+170, $y);
		        $this->setCellPaddings(2);
		        $this->SetFont('','B');
		        $this->Cell($width1+17, $height/4, 'Revisión:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        $this->Cell($width2, $height/4, '1', "B", 0, 'C', false, '', 0, false, 'T', 'C');
		        
				
				
		        $this->SetFont('','');
		        $y += 5;
				$this->SetXY($x, $y);
				$this->SetFontSize(14);
		        $this->SetFont('','B');  
				$this->Cell(170, $height/2,$this->titulo2 , 1, 2, 'C', false, '', 0, false, 'T', 'C');
				$this->SetFont('','');
				$this->SetFontSize(7);
		        $this->SetXY($x+170, $y);
		        $this->setCellPaddings(2);
		        $this->SetFont('','B');
		        //$this->Cell($width1, $height/4, 'Fecha de Emisión:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        //$this->Cell($width2, $height/4, '29/06/2012   ', "B", 0, 'R', false, '', 0, false, 'T', 'C');
		        
		        $this->SetFont('','');
		        $y += 5;
		        $this->SetXY($x+170, $y);
		        $this->setCellPaddings(2);
		        $this->SetFont('','B');
		        $this->Cell($width1+17, $height/4, 'Pagina:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        $this->Cell($width2, $height/4,  '                  '.$this->getAliasNumPage().' de '.$this->getAliasNbPages(), "B", 0, 'C', false, '', 0, false, 'T', 'C');
        
				
			} else if($pCodSistema=='OTROS'){
				//Implementar ...
				
			} else {
				// Logo
				//$image_file = K_PATH_IMAGES.'../../images/logo_reporte.jpg';
				
				$image_file = K_PATH_IMAGES.$_SESSION['_DIR_LOGO'];
				
				
				if( mime_content_type($image_file)=='image/gif'){
					$var_tipo = 'GIF';
				}
				elseif( mime_content_type($image_file)=='image/jpeg'){
					$var_tipo = 'JPG';
				}
				else{
					
					echo 'EL LOGO TIPO NO ES UNA IMAGEN';
					exit;
				}
				
				
				$this->Image($image_file, $align, 5, 35, '',$var_tipo, '', 'T', false, 300, '', false, false, 0, false, false, false);
				// Set font
				$this->SetFont('helvetica', 'B', 16);
				// Title
				$this->Ln(8);
				$this->Cell(0, 12, $this->titulo1, 0, 1, 'C', 0, '', 0, false, 'M', 'M');
				$this->SetFont('helvetica', 'B', 12);
				$this->Cell(0, 10, $this->titulo2, 0, 1, 'C', 0, '', 0, false, 'M', 'M');
				$this->Cell(0, 10, $this->titulo3, 0, 2, 'C', 0, '', 0, false, 'C', 'C');
			}
		 	
		 } else{
		 	//Por defecto 'P' Portrait
			if($pCodSistema=='GEM'||$pCodSistema=='PXP'){
				$height = 20;
		        $x = $this->GetX();
		        $y = $this->GetY();
		        $this->SetXY($x, $y);
		        $this->Cell(40, $height, '', 1, 0, 'C', false, '', 0, false, 'T', 'C');
		        $this->Image(dirname(__FILE__).'/../'.$_SESSION['_DIR_LOGO'], 26, 8, 20);
		        
		        $x = $this->GetX();
		        $y = $this->GetY();
		        $this->SetFontSize(14);
		        $this->SetFont('','B');        
		        $this->Cell(105, $height/2,$this->titulo1 , 1, 2, 'C', false, '', 0, false, 'T', 'C');        
		        $this->SetFontSize(10);
		        $this->Cell(105,$height/2, $this->objParam->getParametro('titulo2'),1,0,'C',false,'',1,false,'T','C');
		        
		        $this->setXY($x+105,$y);
		        $this->SetFont('','');
		        $this->Cell(40, $height, '', 1, 0, 'C', false, '', 0, false, 'T', 'C');
		        
		        
		        $this->SetFontSize(7);
		        
		        $width1 = 17;
		        $width2 = 23;
		        $this->SetXY($x+105, $y);
		        $this->setCellPaddings(2);
		        //$this->Cell($width1, $height/4, 'Codigo:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        //$this->SetFont('','B');
		        //$this->Cell($width2, $height/4, $this->objParam->getParametro('codReporte'), "B", 0, 'C', false, '', 0, false, 'T', 'C');
		        
		        $this->SetFont('','');
		        $y += 5;
		        $this->SetXY($x+105, $y);
		        $this->setCellPaddings(2);
		        $this->Cell($width1, $height/4, 'Revisión:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        $this->SetFont('','B');
		        $this->Cell($width2, $height/4, '1', "B", 0, 'C', false, '', 0, false, 'T', 'C');
		        
		        $this->SetFont('','');
		        $y += 5;
				$this->SetXY($x, $y);
				$this->SetFontSize(14);
		        $this->SetFont('','B');  
				$this->Cell(105, $height/2,$this->titulo2 , 1, 2, 'C', false, '', 0, false, 'T', 'C');
				$this->SetFont('','');
				$this->SetFontSize(7);
		        $this->SetXY($x+105, $y);
		        $this->setCellPaddings(2);
		        //$this->Cell($width1, $height/4, 'Fecha Emisión:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        //$this->SetFont('','B');
		        //$this->Cell($width2, $height/4, $this->objParam->getParametro('fechaRep'), "B", 0, 'C', false, '', 0, false, 'T', 'C');
		        
		        $this->SetFont('','');
		        $y += 5;
		        $this->SetXY($x+105, $y);
		        $this->setCellPaddings(2);
		        $this->Cell($width1, $height/4, 'Página:', "B", 0, '', false, '', 0, false, 'T', 'C');
		        $this->SetFont('','B');
		        $this->Cell($width2, $height/4,  '                  '.$this->getAliasNumPage().' de '.$this->getAliasNbPages(), "B", 0, 'C', false, '', 0, false, 'T', 'C');
        
			} else if($pCodSistema=='OTRO'){
				//Implementar su propia cabecera
				
			} else{
				//Cabecera por defecto
				// Logo
				//$image_file = K_PATH_IMAGES.'../../images/logo_reporte.jpg';
				$image_file = K_PATH_IMAGES.$_SESSION['_DIR_LOGO'];
				if( mime_content_type($image_file)=='image/gif'){
					$var_tipo = 'GIF';
					$img = imagecreatefromgif($image_file);
					$x = ImageSX($img);//para el ancho
					$y = ImageSY($img);//para el alto
				}
				elseif( mime_content_type($image_file)=='image/jpeg'){
					$var_tipo = 'JPG';
					$img = imagecreatefromjpeg($image_file);
					$x = ImageSX($img);//para el ancho
					$y = ImageSY($img);//para el alto
				}
				elseif( mime_content_type($image_file)=='image/png'){
					$var_tipo = 'PNG';
					$img = imagecreatefrompng($image_file);
					$x = ImageSX($img);//para el ancho
					$y = ImageSY($img);//para el alto
				}
				else{
					echo 'EL LOGO TIPO NO ES UNA IMAGEN';
					exit;
				}
				
				$this->Image($image_file, $align, 5, 35, '',$var_tipo, '', 'T', false, 300, '', false, false, 0, false, false, false);
				// Set font
				$this->SetFont('helvetica', 'B', 16);
				// Title
				$this->Ln(8);
				$this->Cell(0, 12, $this->titulo1, 0, 1, 'C', 0, '', 0, false, 'M', 'M');
				$this->SetFont('helvetica', 'B', 12);
				$this->Cell(0, 10, $this->titulo2, 0, 1, 'C', 0, '', 0, false, 'M', 'M');
				$this->Cell(0, 10, $this->titulo3, 0, 2, 'C', 0, '', 0, false, 'C', 'C');
			}
		 	
		 }

	 }

	function _json_decode($string) {
		/*if (get_magic_quotes_gpc()) {
			$string = stripslashes($string);
		}*/

		return json_decode($string,true);
	}
	
	/*	#ISSUE				FECHA				AUTOR				DESCRIPCION
 		#22	EndeEtr		 06-06-2019 			MZM				Adicion de funcion para manejo de reporte multilinea	
 	*/
 function grillaDatos($datas,$alto_grupo, $border=1, $cant_col=10, $alto_col=2.5, $align='R',$tam_letra=7, $separador='si') {//ETR-2046
		
		$ancho_uti=0;
		$id_break=$datas[0];
		$cont=0;
		$relleno;
		$num_grupo=1;
		
		$ancho_col= round((($this->ancho_hoja-1)/$cant_col),2);
		
		$dimensions = $this->getPageDimensions();
		
		for ($i=0; $i< sizeof($datas); $i++ ){
			
			
			if($i%6==0){ 
				$cont=0;
				
				if($datas[$i+3]=='B'){
					$this->SetFont('','B',$tam_letra);
				}else{
					$this->SetFont('','',$tam_letra);
				}
				
				
				if($id_break!=$datas[$i]){
					$num_grupo++;
					
					$ancho_uti=0;
				//echo '***'.$this->GetY()+$alto_grupo+$dimensions['bm'].'***'.$dimensions['hk']; exit;
					if ($this->GetY()+$alto_grupo+$dimensions['bm']> $dimensions['hk']){
						
						$this->AddPage();
						$this->SetY($this->GetY()-5);//#69
					}
					$cont=0;
					if($datas[$i+1]>0){
						while ($cont <= $datas[$i+1]){
							if($cont==$datas[$i+1]){
								$relleno=$datas[$i+2];
									
								
								
							}else{
								$relleno='';
							}	
								
							if($ancho_uti+$ancho_col>$this->ancho_hoja){
								$this->Cell(0.1, $alto_col, '', $border, 1, $datas[$i+5]);//,
								$ancho_uti=0;
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);
								$ancho_uti+=$ancho_col;
							}else{
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
								$ancho_uti+=$ancho_col;
								
							}
							$cont++;
						}
					
						
				}else{
					if($ancho_uti+$ancho_col>$this->ancho_hoja){
							$this->Cell(0, $alto_col, '', 0, 1, $datas[$i+5]);//,
							$ancho_uti=0;
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}else{
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}
									
					}
					if($datas[$i+4]==1){
						if($separador=='si'){//ETR-2046
							$this->ln(1);
							$this->SetLineWidth(0.1);
		 	 				$this->SetDrawColor(0,0,0);
							$this->Cell(0,0,'','B',1);
						}else{
							$this->ln(5);
						}
						
						
					
					}
					
					
				}else{ 
					
					
					if($datas[$i+1]>0){
						while ($cont <= $datas[$i+1]){
							if($cont==$datas[$i+1]){
								$relleno=$datas[$i+2];
							}else{
								$relleno='';
							}	
								
							if($ancho_uti+$ancho_col>$this->ancho_hoja){
								$this->Cell(0.1, $alto_col, '', $border, 1, $datas[$i+5]);//,
								$ancho_uti=0;
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);
								$ancho_uti+=$ancho_col;
							}else{
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
								$ancho_uti+=$ancho_col;
								
							}
							$cont++;
						}
					if($datas[$i+4]==1){ 
						if($separador=='si'){//ETR-2046
							$this->ln(1);
							$this->SetLineWidth(0.1);
		 	 				$this->SetDrawColor(0,0,0);
							$this->Cell(0,0,'','B',1);
						}else{
							$this->ln(5);
						}
						
					}
						
						
				}else{
					
					    if($ancho_uti+$ancho_col>$this->ancho_hoja){
							$this->Cell(0, $alto_col, '', 0, 1, $datas[$i+5]);//,
							$ancho_uti=0;
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}else{
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}
						
						if($datas[$i+4]==1){ 
							if($separador=='si'){//ETR-2046
								$this->ln(1);
								$this->SetLineWidth(0.1);
			 	 				$this->SetDrawColor(0,0,0);
								$this->Cell(0,0,'','B',1);
							}else{
								$this->ln(5);
							}
							
					    }
										
					}
				}

					
					$id_break=$datas[$i];
					
				}
			}
		
	}
	
	
	
	function grillaDatosBoleta($datas,$alto_grupo, $border=1, $cant_col=10, $alto_col=2.5, $align='R', $tam_letra=5 ) {
		
		$ancho_uti=0;
		$id_break=$datas[0];
		$cont=0;
		$relleno;
		$num_grupo=1;
		
		$control_espacios_extra=($this->datos_titulo['num_columna_multilinea']/2)-1;
		$dimensions = $this->getPageDimensions();
		
		for ($i=0; $i< sizeof($datas); $i++ ){
			
			$ancho_col=$datas[$i+6];
			if($ancho_col==0){
				$ancho_col= round((($this->ancho_hoja-1)/$cant_col),2);
			}
			
			if($i%9==0){ 
				$cont=0;
			
				if($datas[$i+3]=='B'){
					$this->SetFont('','B',$tam_letra);
				}else{
					$this->SetFont('','',$tam_letra);
				}
				
				
				if($id_break!=$datas[$i]){
					$num_grupo++;
					
					$ancho_uti=0;
				//echo '***'.$this->GetY()+$alto_grupo+$dimensions['bm'].'***'.$dimensions['hk']; exit;
					if ($this->GetY()+$alto_grupo+$dimensions['bm']> $dimensions['hk']){
						
						$this->AddPage();
						$this->SetY($this->GetY()-5);//#69
					}
					$cont=0;
					if($datas[$i+1]>0){ 
						while ($cont <= $datas[$i+1]){
								
							if($cont==$datas[$i+1]){
								$ancho_col=$datas[$i+6];
								$relleno=$datas[$i+2]+'';
							}else{
								$ancho_col=$datas[$i+7];
								$relleno='';
							}	
							
							if($ancho_uti+$ancho_col>$this->ancho_hoja){
								$this->Cell(0.1, $alto_col, '', $border, 1, $datas[$i+5]);//,
								$ancho_uti=0;
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);
								$ancho_uti+=$ancho_col;
								
								if($cont%2!=0 && ($ancho_uti+5 < $this->ancho_hoja)){
									//if($control_espacios_extra>$datas[$i+8]){
										$this->Cell(5, $alto_col, '', $border, 0, $datas[$i+5]);
										$ancho_uti+=5;
									//}
								}
								
							}else{
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
								$ancho_uti+=$ancho_col;
								if($cont%2!=0 && ($ancho_uti+5 < $this->ancho_hoja)){
									//if($control_espacios_extra>$datas[$i+8]){
										$this->Cell(5, $alto_col, '', $border, 0, $datas[$i+5]);
										$ancho_uti+=5;
									//}
								}
								
							}
							$cont++;
						}
					
						
				}else{ //sin espacio_prei
					if($ancho_uti+$ancho_col>$this->ancho_hoja){
							$this->Cell(0, $alto_col, '', 0, 1, $datas[$i+5]);//,
							$ancho_uti=0;
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}else{
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}
									
					}
					if($datas[$i+4]==1){
						$this->ln(1);
						$this->SetLineWidth(0.1);
	 	 				$this->SetDrawColor(0,0,0);
						$this->Cell(0,0,'','B',1);
					    //$this->SetY($this->GetY()-2.5);	
					}
					
				}else{ 
					
					
					if($datas[$i+1]>0){ 
						while ($cont <= $datas[$i+1]){
							
							if($cont==$datas[$i+1]){
								$ancho_col=$datas[$i+6]; 
								$relleno=$datas[$i+2];
							}else{
								$ancho_col=$datas[$i+7]; 
								$relleno='';
							}	
							
							if($ancho_uti+$ancho_col>$this->ancho_hoja){ //echo '----'.$ancho_col.'---'.$ancho_uti.'---'.$this->ancho_hoja; exit;
								$this->Cell(0.1, $alto_col, '', $border, 1, $datas[$i+5]);//,
								$ancho_uti=0;
								$this->Cell($ancho_col, $alto_col, $relleno.'', $border, 0, $datas[$i+5]);
								$ancho_uti+=$ancho_col;
								if($cont%2!=0 && ($ancho_uti+5 < $this->ancho_hoja)){
									//if($control_espacios_extra>$datas[$i+8]){
										$this->Cell(5, $alto_col, '', $border, 0, $datas[$i+5]);
										$ancho_uti+=5;
									//}
								}	
								
							}else{
								$this->Cell($ancho_col, $alto_col, $relleno, $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
								$ancho_uti+=$ancho_col;
								
								if($cont%2!=0 && ($ancho_uti+5 < $this->ancho_hoja)){
									//if($control_espacios_extra>$datas[$i+8]){
										$this->Cell(5, $alto_col, '', $border, 0, $datas[$i+5]);
										$ancho_uti+=5;
									//}
								}								
							}
							$cont++;
						}
					if($datas[$i+4]==1){ 
						$this->ln(1);
						$this->SetLineWidth(0.1);
	 	 				$this->SetDrawColor(0,0,0);
						$this->Cell(0,0,'','B',1);
						//$this->SetY($this->GetY()-2.5);
						
					}
						
						
				}else{ //echo '-----***------'.$ancho_col; exit;
					
					    if($ancho_uti+$ancho_col>$this->ancho_hoja){
							$this->Cell(0, $alto_col, '', 0, 1, $datas[$i+5]);//,
							$ancho_uti=0;
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}else{
							$this->Cell($ancho_col, $alto_col, $datas[$i+2], $border, 0, $datas[$i+5]);//, 0, '', 0, false, 'C', 'C');
							$ancho_uti+=$ancho_col;
						}
						
						if($datas[$i+4]==1){ 
							$this->ln(1);
							$this->SetLineWidth(0.1);
		 	 				$this->SetDrawColor(0,0,0);
							$this->Cell(0,0,'','B',1);
						//	$this->SetY($this->GetY()-2.5);
							
					    }
										
					}
				}

					
					$id_break=$datas[$i];
					
				}
			}
		
	}

}

?>
